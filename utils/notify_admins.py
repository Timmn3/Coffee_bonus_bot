import logging

from aiogram import Dispatcher

from data.config import CODER, ADMIN_IE
from loguru import logger

from utils.db_api.users_commands import count_users


async def on_startup_notufy(dp: Dispatcher):
    try:
        text = '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'
        await dp.bot.send_message(chat_id=CODER, text=text)
    except Exception as err:
        logging.exception(err)


# –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º –æ –Ω–æ–≤–æ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
async def new_user_registration(dp: Dispatcher, username):
    count = await count_users()
    try:
        message = (
            f'‚úÖ–í –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \n'
            f'username: @{username}\n'
            f'üöπ–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{count}</b>'
        )

        for admin_id in [CODER, ADMIN_IE]:
            await dp.bot.send_message(chat_id=admin_id, text=message, parse_mode='HTML')

    except Exception as err:
        logger.exception(err)


async def send_admins(dp: Dispatcher, text):
    try:
        await dp.bot.send_message(chat_id=CODER, text=text)
    except Exception as err:
        logger.exception(err)